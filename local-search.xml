<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Django基础</title>
    <link href="/python/django/Django%E5%9F%BA%E7%A1%80/"/>
    <url>/python/django/Django%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="创建-Django-工程"><a href="#创建-Django-工程" class="headerlink" title="创建 Django 工程"></a>创建 Django 工程</h2><blockquote><p>如果是在 Python的虚拟环境下使用，需要先激活虚拟环境</p></blockquote><p>创建Django程序</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">django-admin startproject mysite<br></code></pre></div></td></tr></table></figure><p>启动服务器（Django的缺省端口为8000）</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd mysite<br>python manage.py runserver 127.0.0.1:8080<br></code></pre></div></td></tr></table></figure><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight gherkin"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gherkin">|<span class="hljs-string">-- mysite</span><br>|<span class="hljs-string">   </span>|<span class="hljs-string">-- __init__.py</span><br>|<span class="hljs-string">   </span>|<span class="hljs-string">-- asgi.py</span><br>|<span class="hljs-string">   </span>|<span class="hljs-string">-- settings.py</span><br>|<span class="hljs-string">   </span>|<span class="hljs-string">-- urls.py</span><br>|<span class="hljs-string">   `-- wsgi.py</span><br>|<span class="hljs-string">-- templates</span><br><span class="hljs-string">`-- manage.py</span><br></code></pre></div></td></tr></table></figure><ul><li>mysite: 项目的容器</li><li>manage.py: 一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互</li><li>mysite/__init__.py: 一个空文件，告诉 Python 该目录是一个 Python 包</li><li>mysite/asgi.py: 一个 ASGI 兼容的 Web 服务器的入口，以便运行你的项目</li><li>mysite/settings.py: 该 Django 项目的设置/配置。</li><li>mysite/urls.py: 该 Django 项目的 URL 声明; 一份由 Django 驱动的网站”目录”</li><li>mysite/wsgi.py: 一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目</li><li>templates: 模板目录，创建时自动生成，或者手动创建，在<code>settings.py</code>中配置</li></ul><h2 id="一个最简单的请求处理流程"><a href="#一个最简单的请求处理流程" class="headerlink" title="一个最简单的请求处理流程"></a>一个最简单的请求处理流程</h2><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> HttpResponse<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">aaa</span>(<span class="hljs-params">request</span>):</span><br>  <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">  :param request: 请求的相关信息（是一个对象）</span><br><span class="hljs-string">  &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;success&#x27;</span>)<br><br>urlpatterns = [<br>    <span class="hljs-comment"># path(&#x27;admin/&#x27;, admin.site.urls),</span><br>  path(<span class="hljs-string">&#x27;aaa/&#x27;</span>, aaa()),<br>]<br></code></pre></div></td></tr></table></figure><h2 id="响应为html"><a href="#响应为html" class="headerlink" title="响应为html"></a>响应为html</h2><p>在template目录下创建一个 login.html</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Login<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>用户名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>密码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>修改urls.py中的映射</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> HttpResponse, render<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>(<span class="hljs-params">request</span>):</span><br>    <span class="hljs-comment"># return HttpResponse(&#x27;success&#x27;)</span><br>    <br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>)<br><br>urlpatterns = [<br>    <span class="hljs-comment"># path(&#x27;admin/&#x27;, admin.site.urls),</span><br>    path(<span class="hljs-string">&#x27;login/&#x27;</span>, login),<br>]<br></code></pre></div></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>在<code>settings.py</code>文件中，修改项目的相关配置</p><h3 id="配置模板目录"><a href="#配置模板目录" class="headerlink" title="配置模板目录"></a>配置模板目录</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">TEMPLATES = [<br>    &#123;<br>        <span class="hljs-string">&#x27;BACKEND&#x27;</span>: <span class="hljs-string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,<br>        <span class="hljs-string">&#x27;DIRS&#x27;</span>: [BASE_DIR / <span class="hljs-string">&#x27;templates&#x27;</span>] <span class="hljs-comment"># &#x27;templates&#x27; 就是模板的路径， BASE_DIR：项目的根路径</span><br>        ,<br>        <span class="hljs-string">&#x27;APP_DIRS&#x27;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;context_processors&#x27;</span>: [<br>                <span class="hljs-string">&#x27;django.template.context_processors.debug&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.template.context_processors.request&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,<br>            ],<br>        &#125;,<br>    &#125;,<br>]<br></code></pre></div></td></tr></table></figure><h3 id="配置静态资源目录（JavaScript，CSS，Image）"><a href="#配置静态资源目录（JavaScript，CSS，Image）" class="headerlink" title="配置静态资源目录（JavaScript，CSS，Image）"></a>配置静态资源目录（JavaScript，CSS，Image）</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">STATIC_URL = <span class="hljs-string">&#x27;/static/&#x27;</span> <span class="hljs-comment"># 静态资源前缀</span><br>STATICFILES_DIRS = (<br>    [BASE_DIR / <span class="hljs-string">&#x27;static&#x27;</span>] <span class="hljs-comment"># 静态资源目录，</span><br>)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
      <category>django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim教程</title>
    <link href="/linux/vim/vim%E6%95%99%E7%A8%8B/"/>
    <url>/linux/vim/vim%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<style>table tr th:nth-child(1){  min-width: 20%;}table tr th:nth-child(1){}table tr th:nth-child(3){}</style><h1 id="Vim-教程"><a href="#Vim-教程" class="headerlink" title="Vim 教程"></a>Vim 教程</h1><blockquote><p>教程视频：<a href="https://www.bilibili.com/video/BV1Yt411X7mu?p=3">vim入门教程 | B站</a></p></blockquote><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>vim 分为四种模式</p><ul><li><h3 id="正常模式（normal）"><a href="#正常模式（normal）" class="headerlink" title="正常模式（normal）"></a>正常模式（normal）</h3>正常模式是使用vim打开文件时的默认模式，无论在哪种模式下，按下Esc键就会进入正常模式。在这个模式下，可以移动光标，删除某个字符，删除某行，复制多行，粘贴多行</li><li><h3 id="插入模式（insert）"><a href="#插入模式（insert）" class="headerlink" title="插入模式（insert）"></a>插入模式（insert）</h3>在正常模式下按下 <code>i</code> 键，进入插入模式，插入模式里可以进行文字的输入，在该模式下按 <code>Esc</code> 键切换到普通模式。</li><li><h3 id="命令模式（command）"><a href="#命令模式（command）" class="headerlink" title="命令模式（command）"></a>命令模式（command）</h3>在正常模式下输入“:”或“/”进入命令行模式，在该模式下可以进行保存，搜索，替换，退出，显示行号等。</li><li><h3 id="可视模式（visual）"><a href="#可视模式（visual）" class="headerlink" title="可视模式（visual）"></a>可视模式（visual）</h3>可视模式是选中一块区域进行操作，包括删除，替换，复制，粘贴，改变大小写等。</li></ul><h2 id="使用-vim"><a href="#使用-vim" class="headerlink" title="使用 vim"></a>使用 vim</h2><p>在cmd/终端/控制台/Terminal中输入 <code>vim</code> 进入vim，或输入</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">vim 要编辑的文件名<br></code></pre></div></td></tr></table></figure><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><p>几乎所有的快捷键都只能在<strong>普通模式</strong>下使用（Esc除外）</p><h4 id="模式切换-相关快捷键"><a href="#模式切换-相关快捷键" class="headerlink" title="模式切换 相关快捷键"></a>模式切换 相关快捷键</h4><table><thead><tr><th align="center">快捷键</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td align="center"><code>Esc</code></td><td>普通模式（默认就是普通模式）</td><td>在其他三种模式下，按 <code>Esc</code> 键进入普通模式</td></tr><tr><td align="center"><code>i</code></td><td>插入模式（–INSERT–）</td><td>插入模式下才能进行文字的输入</td></tr><tr><td align="center"><code>V</code></td><td>可视模式（–VISUAL–）</td><td>选中一块区域进行复制、剪切、粘贴、删除等操作</td></tr><tr><td align="center"><code>/</code> 或 <code>:</code></td><td>命令模式</td><td><code>/</code> 后跟字符为查找、替换功能<br/><code>:</code> 为命令模式，保存、退出以及很多扩展功能</td></tr></tbody></table><h4 id="光标移动-相关快捷键"><a href="#光标移动-相关快捷键" class="headerlink" title="光标移动 相关快捷键"></a>光标移动 相关快捷键</h4><table><thead><tr><th align="center">快捷键</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td align="center"><code>Esc</code></td><td>取消命令</td><td>取消当前命令（需要在<strong>命令模式</strong>下）<br/>在某些情况下，比如不小心输入错误，想取消命令就可以在命令模式下按 <code>Esc</code> 键取消</td></tr><tr><td align="center"><code>:w</code></td><td>保存</td><td>输入 <code>:wq</code> 可以直接保存并退出</td></tr><tr><td align="center"><code>:q</code></td><td>退出</td><td>输入 <code>:q!</code> 可以强制退出不保存</td></tr><tr><td align="center"><code>H</code> <code>J</code> <code>K</code> <code>L</code></td><td>光标移动：左下上右</td><td><code>H</code> = <code>←</code> 左<br/><code>J</code> = <code>↓</code> 下<br/><code>K</code> = <code>↑</code> 上<br/><code>L</code> = <code>→</code> 右</td></tr><tr><td align="center"><code>W</code></td><td>下一个单词</td><td>跳转到下一个单词</td></tr><tr><td align="center"><code>B</code></td><td>上一个单词</td><td>跳转到上一个单词</td></tr><tr><td align="center"><code>Ctrl</code> + <code>F</code></td><td>下一页</td><td>翻页，等价于 <code>PgUp</code></td></tr><tr><td align="center"><code>Ctrl</code> + <code>B</code></td><td>上一页</td><td>翻页，等价于 <code>PgDn</code></td></tr><tr><td align="center"><code>LineNumber</code> + <code>GG</code></td><td>跳转到指定行</td><td>输入行号后，连按两次<code>G</code>键，就可以跳转到指定行<br/><code>LineNumber</code> ：行号</td></tr><tr><td align="center"><code>Number</code> + <code>J</code></td><td>向下跳转 Number 行</td><td><code>Number</code> ：数字</td></tr><tr><td align="center"><code>Number</code> + <code>K</code></td><td>向上跳转 Number 行</td><td><code>Number</code> ：数字</td></tr><tr><td align="center"><code>/</code></td><td>查找对应的字符</td><td>在输入 <code>/</code> 后，输入想要查找的字符，vim 就会全部高亮起来</td></tr><tr><td align="center"><code>N</code></td><td>跳转到下一个匹配的字符（在查找结果中）</td><td>跳转到下一个高亮的字符（即查找结果）</td></tr><tr><td align="center"><code>Shift</code> + <code>N</code></td><td>跳转到上一个匹配的字符（在查找结果中）</td><td>跳转到上一个高亮的字符（即查找结果）</td></tr><tr><td align="center"><code>YY</code></td><td><strong>复制</strong>光标所在行</td><td></td></tr><tr><td align="center"><code>C</code> + <code>Number</code> + <code>C</code></td><td><strong>剪切</strong> Number 行</td><td>直接输入两次 <code>C</code> 是剪切当前光标所在行<br/>加入Number后，是剪切从当前光标往下数Number行<br/><strong>注意</strong>：在使用剪切命令后，会自动进入<strong>编辑模式</strong></td></tr><tr><td align="center"><code>P</code></td><td>粘贴</td><td></td></tr><tr><td align="center"><code>U</code></td><td>撤销上一步操作</td><td></td></tr><tr><td align="center"><code>V</code></td><td>进入选中模式（–VISUAL–）</td><td>进入选中模式后，使用上下左右键可以控制选中的范围，然后配合<br/><code>Y</code>复制<br/><code>C</code>剪切<br/><code>P</code>粘贴<br/><code>U</code>撤销</td></tr></tbody></table><h3 id="开启代码高亮"><a href="#开启代码高亮" class="headerlink" title="开启代码高亮"></a>开启代码高亮</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">:syntax on<br></code></pre></div></td></tr></table></figure><h3 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">:set number<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>vim</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vim</tag>
      
      <tag>TextEditor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django中CSRF</title>
    <link href="/python/django/Django%E5%9F%BA%E7%A1%80%E5%BA%93/"/>
    <url>/python/django/Django%E5%9F%BA%E7%A1%80%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="Django-中-FBC-和-CBV"><a href="#Django-中-FBC-和-CBV" class="headerlink" title="Django 中 FBC 和 CBV"></a>Django 中 FBC 和 CBV</h1><h1 id="Django-中-CSRF-拦截器（跨站请求伪造）"><a href="#Django-中-CSRF-拦截器（跨站请求伪造）" class="headerlink" title="Django 中 CSRF 拦截器（跨站请求伪造）"></a>Django 中 CSRF 拦截器（跨站请求伪造）</h1><blockquote><p>Django学习：<a href="https://www.bilibili.com/video/BV1ZE411j7RK?p=7">B站视频</a></p></blockquote><h2 id="Django-中-CSRF-的基本使用"><a href="#Django-中-CSRF-的基本使用" class="headerlink" title="Django 中 CSRF 的基本使用"></a>Django 中 CSRF 的基本使用</h2><p>在 Django 中，生成项目时已经自动在配置文件 <code>settings.py</code> 加入了CSRF</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>, <span class="hljs-comment"># 该项</span><br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br></code></pre></div></td></tr></table></figure><p>上面这种相当于全局启用 CSRF，这种情况下，如果想对某个<strong>方法</strong>或者<strong>类</strong>单独关闭 CSRF，则只需在对应的方法或者类上加上一个<strong>装饰器</strong> <code>@csrf_exempt</code>，如下所示</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.views.decorators.csrf <span class="hljs-keyword">import</span> csrf_exempt<br><span class="hljs-meta">@csrf_exempt </span><span class="hljs-comment"># 该方法无需认证</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">users</span>(<span class="hljs-params">request</span>):</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></div></td></tr></table></figure><p>第二种情况：全局默认关闭 CSRF</p><p>在 <code>settings.py</code> 文件中将 <code>django.contrib.auth.middleware.AuthenticationMiddleware</code> 删掉，则相当于全局关闭 CSRF</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;, # 该项</span><br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br></code></pre></div></td></tr></table></figure><p>如果想对某个方法或类单独启用，同样也是只需要加上一个装饰器 <code>@csrf_protect</code></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.views.decorators.csrf <span class="hljs-keyword">import</span> csrf_protect<br><span class="hljs-meta">@csrf_protect </span><span class="hljs-comment"># 该方法需单独认证CSRF</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">users</span>(<span class="hljs-params">request</span>):</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></div></td></tr></table></figure><h1 id="Restful-规范"><a href="#Restful-规范" class="headerlink" title="Restful 规范"></a>Restful 规范</h1><p>根据请求的 method 不同，做不同的操作</p><p>原来的定义方式：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">urlpatterns=[<br>  url(<span class="hljs-string">r&#x27;^add_user&#x27;</span>, views.add_user),<br>  url(<span class="hljs-string">r&#x27;^update_user&#x27;</span>, views.update_user),<br>  url(<span class="hljs-string">r&#x27;^query_users&#x27;</span>, views.query_users),<br>  url(<span class="hljs-string">r&#x27;^delete_users&#x27;</span>, views.delete_users),<br>]<br></code></pre></div></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 对应的view</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_user</span>(<span class="hljs-params">request</span>):</span><br>  <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;添加用户&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update_user</span>(<span class="hljs-params">request</span>):</span><br>  <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;修改用户&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">query_users</span>(<span class="hljs-params">request</span>):</span><br>  <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;查询用户&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">delete_users</span>(<span class="hljs-params">request</span>):</span><br>  <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;删除用户&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>使用 restful 规范的定义方式：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">urlpatterns=[<br>  url(<span class="hljs-string">r&#x27;^users&#x27;</span>, views.users),<br>]<br></code></pre></div></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">users</span>(<span class="hljs-params">request</span>):</span><br>  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;查询用户&#x27;</span>)<br>  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;添加用户&#x27;</span>)<br>  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;PUT&#x27;</span>:<br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;更新用户&#x27;</span>)  <br>  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;DELETE&#x27;</span>:<br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;删除用户&#x27;</span>)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
      <category>django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>django</tag>
      
      <tag>CSRF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django 安装</title>
    <link href="/python/django/Django%E5%AE%89%E8%A3%85/"/>
    <url>/python/django/Django%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="Django-安装"><a href="#Django-安装" class="headerlink" title="Django 安装"></a>Django 安装</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h3><p>在安装Django前，需要先安装Python，使用Django需要安装 Python3.x 以上版本</p><p>Python 的安装方法见：<a href="https://www.runoob.com/python/python-install.html">菜鸟教程 | Python 环境搭建</a></p><h3 id="创建-Python-虚拟环境（venv）"><a href="#创建-Python-虚拟环境（venv）" class="headerlink" title="创建 Python 虚拟环境（venv）"></a>创建 Python 虚拟环境（venv）</h3><blockquote><p>官方介绍：<a href="https://docs.python.org/3/tutorial/venv.html">https://docs.python.org/3/tutorial/venv.html</a></p></blockquote><ol><li><p>执行以下命令创建虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">python3 -m venv venv_dir<br></code></pre></div></td></tr></table></figure><p><code>venv_dir</code> 是虚拟环境的保存目录，如果该目录不存在，python将会自动创建</p></li><li><p>启用（激活）虚拟环境</p><p>在windows上运行：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">venv_dir\Script\activate.bat<br></code></pre></div></td></tr></table></figure><p>在Linux/MacOS上运行：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">source venv_dir/bin/activate<br></code></pre></div></td></tr></table></figure></li></ol><h2 id="Django-安装-1"><a href="#Django-安装-1" class="headerlink" title="Django 安装"></a>Django 安装</h2><p>只列出推荐方法安装，建议在 Python 的虚拟环境中安装</p><h3 id="通过-pip-安装正式发布版本"><a href="#通过-pip-安装正式发布版本" class="headerlink" title="通过 pip 安装正式发布版本"></a>通过 pip 安装正式发布版本</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pip install Django<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
      <category>django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win10搭建python的Linux开发环境</title>
    <link href="/linux/win10%E6%90%AD%E5%BB%BApython%E7%9A%84Linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(pycharm+vagrant+virtualbox)/"/>
    <url>/linux/win10%E6%90%AD%E5%BB%BApython%E7%9A%84Linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(pycharm+vagrant+virtualbox)/</url>
    
    <content type="html"><![CDATA[<h1 id="win10搭建python的Linux开发环境-pycharm-vagrant-virtualbox"><a href="#win10搭建python的Linux开发环境-pycharm-vagrant-virtualbox" class="headerlink" title="win10搭建python的Linux开发环境(pycharm+vagrant+virtualbox)"></a>win10搭建python的Linux开发环境(pycharm+vagrant+virtualbox)</h1><blockquote><p>本文参考 <a href="https://anjia0532.github.io/2019/07/24/jumpserver-vagrant-virtualbox/">安家Blog</a></p></blockquote><div class="note note-warning">            <p>由于原教程的安装在新版中会存在一点问题，所以重新整理了一份</p>          </div><p>本文主要介绍windows环境下搭建Python的Linux开发环境，使用Pycharm、Vagrant、VirtualBox搭建环境<br>以Jumpserver为例</p><h2 id="软件环境准备"><a href="#软件环境准备" class="headerlink" title="软件环境准备"></a>软件环境准备</h2><p>共需要准备三个文件</p><ul><li>Vagrant安装包</li><li>VirtualBox安装包</li><li>package.box系统镜像</li></ul><h3 id="win7建议安装以下版本："><a href="#win7建议安装以下版本：" class="headerlink" title="win7建议安装以下版本："></a>win7建议安装以下版本：</h3><ol><li>vagrant_1.8.6.msi</li><li>VirtualBox-5.1.24-117012-Win.exe</li></ol><h3 id="win10建议安装以下版本："><a href="#win10建议安装以下版本：" class="headerlink" title="win10建议安装以下版本："></a>win10建议安装以下版本：</h3><p>经过尝试，其实vagrant版本可以任意，最新版2.2.15也能正常运行</p><ol><li><a href="https://releases.hashicorp.com/vagrant/1.8.7/">vagrant_1.8.7.msi</a> / <a href="https://releases.hashicorp.com/vagrant/1.9.7/">vagrant_1.9.7_x86_x64.msi</a></li><li><a href="http://download.virtualbox.org/virtualbox/5.1.24/">VirtualBox-5.1.24-117012-Win.exe</a></li></ol><h3 id="下载package-box系统镜像"><a href="#下载package-box系统镜像" class="headerlink" title="下载package.box系统镜像"></a>下载package.box系统镜像</h3><p>在vagrant官网下载package.box文件，也就是系统的镜像文件<br>下载地址：<a href="http://www.vagrantbox.es/">www.vagrantbox.es</a></p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="Vagrant和VirtualBox安装"><a href="#Vagrant和VirtualBox安装" class="headerlink" title="Vagrant和VirtualBox安装"></a>Vagrant和VirtualBox安装</h3><p>Vagrant和VirtualBox都是安装程序，直接下一步下一步就好了</p><h3 id="把虚拟机加载到box容器中"><a href="#把虚拟机加载到box容器中" class="headerlink" title="把虚拟机加载到box容器中"></a>把虚拟机加载到box容器中</h3><p>以CentOS7为例<br>打开package.box文件的存放目录，在该目录下执行命令</p><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">vagrant box add centos/7 xxx.box<br></code></pre></div></td></tr></table></figure><h2 id="下载Jumpserver并初始化虚拟机"><a href="#下载Jumpserver并初始化虚拟机" class="headerlink" title="下载Jumpserver并初始化虚拟机"></a>下载Jumpserver并初始化虚拟机</h2><h3 id="下载jumpserver"><a href="#下载jumpserver" class="headerlink" title="下载jumpserver"></a>下载jumpserver</h3><p>从GitHub克隆Jumpserver</p><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">git clone https://github.com/jumpserver/jumpserver.git<br>cd jumpserver<br></code></pre></div></td></tr></table></figure><p>在jumpserver下创建Vagrantfile，文件内容如下</p><figure class="highlight vim"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vim"># -*- <span class="hljs-keyword">mode</span>: <span class="hljs-keyword">ruby</span> -*-<br># <span class="hljs-keyword">vi</span>: <span class="hljs-keyword">set</span> ft=<span class="hljs-keyword">ruby</span> :<br><br>Vagrant.configure(<span class="hljs-string">&quot;2&quot;</span>) <span class="hljs-keyword">do</span> |config|<br>  # Every Vagrant development environment requires <span class="hljs-keyword">a</span> box. You can <span class="hljs-built_in">search</span> <span class="hljs-keyword">for</span><br>  # boxes at http<span class="hljs-variable">s:</span>//vagrantcloud.<span class="hljs-keyword">com</span>/<span class="hljs-built_in">search</span>.<br>  config.<span class="hljs-keyword">vm</span>.box_check_update = false<br>  config.<span class="hljs-keyword">vm</span>.box = <span class="hljs-string">&quot;centos/7&quot;</span><br>  config.<span class="hljs-keyword">vm</span>.<span class="hljs-built_in">hostname</span> = <span class="hljs-string">&quot;jumpserver&quot;</span><br>  config.<span class="hljs-keyword">vm</span>.network <span class="hljs-string">&quot;private_network&quot;</span>, ip: <span class="hljs-string">&quot;172.17.8.101&quot;</span><br>  config.<span class="hljs-keyword">vm</span>.provider <span class="hljs-string">&quot;virtualbox&quot;</span> <span class="hljs-keyword">do</span> |vb|<br>    vb.memory = <span class="hljs-string">&quot;4096&quot;</span><br>    vb.cpus = <span class="hljs-number">2</span><br>    vb.name = <span class="hljs-string">&quot;jumpserver&quot;</span><br>  end<br><br>  config.<span class="hljs-keyword">vm</span>.synced_folder <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;/vagrant&quot;</span>, <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;rsync&quot;</span>,<br>    rsync__verbose: true,<br>    rsync__exclude: [<span class="hljs-string">&#x27;.git*&#x27;</span>, <span class="hljs-string">&#x27;node_modules*&#x27;</span>,<span class="hljs-string">&#x27;*.log&#x27;</span>,<span class="hljs-string">&#x27;*.box&#x27;</span>,<span class="hljs-string">&#x27;Vagrantfile&#x27;</span>]<br><br>  config.<span class="hljs-keyword">vm</span>.provision <span class="hljs-string">&quot;shell&quot;</span>, inline: &lt;&lt;-SHELL<br>sudo sed -<span class="hljs-keyword">e</span> <span class="hljs-string">&quot;/mirrorlist/d&quot;</span> -<span class="hljs-keyword">e</span> <span class="hljs-string">&quot;s/#baseurl/baseurl/g&quot;</span> -<span class="hljs-keyword">e</span> <span class="hljs-string">&quot;s/mirror\.centos\.org/mirrors\.tuna\.tsinghua\.edu\.cn/g&quot;</span> -i /etc/yum.repos.d/CentOS-Base.repo<br>sudo yum makecache<br>sudo yum install -<span class="hljs-keyword">y</span> epel-release<br><br>sudo yum install -<span class="hljs-keyword">y</span> python36 python36-devel python36-pip \<br> libtiff-devel libjpeg-devel libzip-devel freetype-devel \<br>     lcms2-devel libwebp-devel <span class="hljs-keyword">tcl</span>-devel tk-devel sshpass \<br>     openldap-devel mariadb-devel mysql-devel libffi-devel \<br>     openssh-clients telnet openldap-clients gcc<br><br><span class="hljs-built_in">mkdir</span> /home/vagrant/.pip<br><span class="hljs-keyword">cat</span> &lt;&lt; EOF | sudo tee -<span class="hljs-keyword">a</span> /home/vagrant/.pip/pip.<span class="hljs-keyword">conf</span><br>[<span class="hljs-keyword">global</span>]<br>timeout = <span class="hljs-number">6000</span><br><span class="hljs-built_in">index</span>-url = http<span class="hljs-variable">s:</span>//mirrors.aliyun.<span class="hljs-keyword">com</span>/pypi/simple/<br><br>[install]<br>use-mirrors = true<br>mirrors = http<span class="hljs-variable">s:</span>//mirrors.aliyun.<span class="hljs-keyword">com</span>/pypi/simple/<br>trusted-host=mirrors.aliyun.<span class="hljs-keyword">com</span><br>EOF<br><br><span class="hljs-keyword">python3</span>.<span class="hljs-number">6</span> -<span class="hljs-keyword">m</span> venv /home/vagrant/venv<br><span class="hljs-keyword">source</span> /home/vagrant/venv/bin/activate<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;source /home/vagrant/venv/bin/activate&quot;</span> &gt;&gt; /home/vagrant/.bash_profile<br>  SHELL<br>end<br></code></pre></div></td></tr></table></figure><h3 id="开启虚拟机（初始化虚拟机环境）"><a href="#开启虚拟机（初始化虚拟机环境）" class="headerlink" title="开启虚拟机（初始化虚拟机环境）"></a>开启虚拟机（初始化虚拟机环境）</h3><div class="note note-warning">            <p>每次执行vagrant的相关命令时，必须在对应的目录下，也就是jumpserver目录下执行</p>          </div><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd jumpserver<br>vagrant up<br>vagrant ssh<br></code></pre></div></td></tr></table></figure><p>如果使用上述的Vagrantfile，则已经配置了pip的清华源和阿里源，并已经安装了python3.6</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">vagrant ssh #进入虚拟机<br>pip3 install -r /vagrant/requirements/requirements.txt<br></code></pre></div></td></tr></table></figure><div class="note note-warning">            <p>如果此处报权限错误，执行以下语句提升安装目录的权限等级</p><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo chmod 777 -R /home/vagrant/venv<br></code></pre></div></td></tr></table></figure>          </div><h2 id="安装Jumpserver依赖（MySQL、Redis）"><a href="#安装Jumpserver依赖（MySQL、Redis）" class="headerlink" title="安装Jumpserver依赖（MySQL、Redis）"></a>安装Jumpserver依赖（MySQL、Redis）</h2><blockquote><p>参照官方文档安装：<a href="https://docs.jumpserver.org/zh/master/install/setup_by_lb/">Jumpserver负载均衡</a></p></blockquote><blockquote><p>需要在虚拟机内进行安装</p></blockquote><div class="note note-warning">            <p>如果在安装过程中出现权限不足的情况，使用sudo权限安装即可</p>          </div><div class="note note-danger">            <p>配置Mysql那一步，单纯使用sudo也无法安装，因为三行命令分开解析，需要先提升全局权限为root，即执行<code>su</code>命令，然后再正常执行，执行完成后，<code>exit</code>退出root权限，<strong>否则后续安装的权限都是最高权限，部分命令会导致低权限无法访问</strong></p>          </div><p>==123==</p><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><div class="note note-info">            <p>设置Repo</p><figure class="highlight awk"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">yum -y localinstall http:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/mysql-repo/my</span>sql57-community-release-el7.rpm<br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>安装Mysql</p><figure class="highlight axapta"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs axapta">yum install -y mysql-community-<span class="hljs-keyword">server</span><br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>配置Mysql</p><figure class="highlight awk"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-keyword">if</span> [ ! <span class="hljs-string">&quot;$(cat /usr/bin/mysqld_pre_systemd | grep -v ^\# | grep initialize-insecure )&quot;</span> ]; then<br>    sed -i <span class="hljs-string">&quot;s@--initialize @--initialize-insecure @g&quot;</span> <span class="hljs-regexp">/usr/</span>bin/mysqld_pre_systemd<br>fi<br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>启动Mysql</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">systemctl <span class="hljs-keyword">enable</span> mysqld<br>systemctl <span class="hljs-keyword">start</span> mysqld<br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>数据库授权</p><figure class="highlight ebnf"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">mysql -uroot</span><br></code></pre></div></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">Welcome <span class="hljs-keyword">to</span> the MySQL monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br>Your MySQL <span class="hljs-keyword">connection</span> id <span class="hljs-keyword">is</span> <span class="hljs-number">2</span><br><span class="hljs-keyword">Server</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">5.7</span><span class="hljs-number">.32</span> MySQL Community <span class="hljs-keyword">Server</span> (GPL)<br><br>Copyright (c) <span class="hljs-number">2000</span>, <span class="hljs-number">2020</span>, Oracle <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> its affiliates. <span class="hljs-keyword">All</span> rights reserved.<br><br>Oracle <span class="hljs-keyword">is</span> a registered trademark <span class="hljs-keyword">of</span> Oracle Corporation <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> its<br>affiliates. Other names may be trademarks <span class="hljs-keyword">of</span> their respective<br>owners.<br><br><span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help. <span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the <span class="hljs-keyword">current</span> <span class="hljs-keyword">input</span> <span class="hljs-keyword">statement</span>.<br><br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> jumpserver <span class="hljs-keyword">default</span> charset <span class="hljs-string">&#x27;utf8&#x27;</span>;<br>Query OK, <span class="hljs-number">1</span> <span class="hljs-keyword">row</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; <span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> validate_password_policy=LOW;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;jumpserver&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;weakPassword&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> jumpserver.* <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;jumpserver&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected, <span class="hljs-number">1</span> <span class="hljs-built_in">warning</span> (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; flush <span class="hljs-keyword">privileges</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; <span class="hljs-keyword">exit</span><br>Bye<br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>配置防火墙(直接关闭)</p><figure class="highlight routeros"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">systemctl <span class="hljs-builtin-name">disable</span> firewalld<br></code></pre></div></td></tr></table></figure>          </div><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><div class="note note-danger">            <p>Jumpserver官方在v2.9.2之后的版本修改了 Reids 的安装方式，改为了源码编译安装，这样会导致redis不能开机自启，且这样的步骤较为繁琐，建议采用下面的方案</p>          </div><div class="note note-info">            <p>设置Repo</p><figure class="highlight arduino"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">yum -y install epel-release https:<span class="hljs-comment">//repo.ius.io/ius-release-el7.rpm</span><br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>安装Redis</p><figure class="highlight apache"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install -y redis<span class="hljs-number">5</span><br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>配置Redis</p><figure class="highlight awk"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">sed -i <span class="hljs-string">&quot;s/bind 127.0.0.1/bind 0.0.0.0/g&quot;</span> <span class="hljs-regexp">/etc/</span>redis.conf<br>sed -i <span class="hljs-string">&quot;561i maxmemory-policy allkeys-lru&quot;</span> <span class="hljs-regexp">/etc/</span>redis.conf<br>sed -i <span class="hljs-string">&quot;481i requirepass weakPassword&quot;</span> <span class="hljs-regexp">/etc/</span>redis.conf<br></code></pre></div></td></tr></table></figure>          </div><div class="note note-info">            <p>启动Redis</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">systemctl <span class="hljs-keyword">enable</span> redis<br>systemctl <span class="hljs-keyword">start</span> redis<br></code></pre></div></td></tr></table></figure>          </div><h2 id="配置-Pycharm"><a href="#配置-Pycharm" class="headerlink" title="配置 Pycharm"></a>配置 Pycharm</h2><h3 id="配置-Python-Interpreter"><a href="#配置-Python-Interpreter" class="headerlink" title="配置 Python Interpreter"></a>配置 Python Interpreter</h3><p><img src="https://z3.ax1x.com/2021/04/30/gANn6P.png"><br><img src="https://z3.ax1x.com/2021/04/30/gANMm8.png"><br><img src="https://z3.ax1x.com/2021/04/30/gANGfs.png"></p><h3 id="配置-Run-Debug-Configurations"><a href="#配置-Run-Debug-Configurations" class="headerlink" title="配置 Run/Debug Configurations"></a>配置 Run/Debug Configurations</h3><p><img src="https://z3.ax1x.com/2021/04/30/gAN07F.png"></p><h3 id="配置-Django"><a href="#配置-Django" class="headerlink" title="配置 Django"></a>配置 Django</h3><p><img src="https://z3.ax1x.com/2021/04/30/gANDk4.png"></p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd jumpserver<br>cp config_example.yml config.yml<br></code></pre></div></td></tr></table></figure><blockquote><p>也可以直接将 <code>config_example.yml</code> 文件重命名为 <code>config.yml</code> 文件</p></blockquote><p>然后修改 Mysql 和 Redis 的相关配置<br><img src="https://z3.ax1x.com/2021/04/30/gAN79A.png"></p><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><p>进入对应的目录下</p><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd jumpserver<br>vagrant ssh<br>cd /vagrant/apps<br></code></pre></div></td></tr></table></figure><p>执行以下命令初始化数据库</p><figure class="highlight shell"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">python3 manage.py migrate<br></code></pre></div></td></tr></table></figure><p>等待执行完毕，执行完毕后，进入 jumpserver 数据库查看表是否有正常安装</p><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p>启动前需要先修改以下三项的值</p><figure class="highlight yaml"><table><tr><td class="gutter hljs hljs hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">SECRET_KEY:</span> <span class="hljs-comment"># 加密key，随机输入一个字符串</span><br><span class="hljs-attr">BOOTSTRAP_TOKEN:</span> <span class="hljs-comment"># 跟上面的一样就行</span><br><span class="hljs-attr">DEBUG:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 改为true即可</span><br></code></pre></div></td></tr></table></figure><p>然后启动<br><img src="https://z3.ax1x.com/2021/04/30/gANXB8.png"></p><p>浏览器打开<code>http://172.17.8.101:8080</code>查看是否正常启动</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>虚拟环境</tag>
      
      <tag>vagrant</tag>
      
      <tag>virtualbox</tag>
      
      <tag>jumpserver</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git基础使用</title>
    <link href="/git/Git%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/git/Git%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Git基础使用"><a href="#Git基础使用" class="headerlink" title="Git基础使用"></a>Git基础使用</h1><blockquote><p>本文参考 <a href="https://www.runoob.com/git/git-tutorial.html">Git教程 | 菜鸟教程</a></p></blockquote><p>Git的常用命令：</p><ul><li>git clone</li><li>git pull</li><li>git add</li><li>git commit</li><li>git push</li></ul><p>常用命令及不同状态之间的关系如图<br><img src="https://z3.ax1x.com/2021/04/26/gpPOaV.png"></p><p>说明：</p><ul><li>workspace：工作区</li><li>staging area：暂存区/缓冲区</li><li>local repository：本地仓库</li><li>remote repository：远程仓库</li></ul><h2 id="创建仓库命令"><a href="#创建仓库命令" class="headerlink" title="创建仓库命令"></a>创建仓库命令</h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>git init</code></td><td>初始化/创建本地仓库</td></tr><tr><td><code>git clone</code></td><td>从远程仓库克隆一个项目</td></tr></tbody></table><h2 id="更新-同步代码"><a href="#更新-同步代码" class="headerlink" title="更新(同步代码)"></a>更新(同步代码)</h2><p>git获取更新有两种方式</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://www.runoob.com/git/git-pull.html"><code>git pull</code></a></td><td>从远程仓库获取更新到本地仓库，并直接合并到工作区</td></tr><tr><td><a href="https://www.runoob.com/git/git-fetch.html"><code>git fetch</code></a></td><td>从远程仓库获取更新到本地仓库</td></tr></tbody></table><p><a href="http://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6"><code>git merge</code></a> | 合并分支</p><p><a href="http://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2"><code>git log</code></a> | 查看提交历史</p><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://www.runoob.com/git/git-add.html"><code>git add</code></a></td><td>添加文件到暂存区</td></tr><tr><td><a href="https://www.runoob.com/git/git-commit.html"><code>git commit</code></a></td><td>将暂存区中的文件提交到本地仓库</td></tr><tr><td><a href="https://www.runoob.com/git/git-push.html"><code>git push</code></a></td><td>将本地仓库代码上传到远程仓库，并且合并</td></tr></tbody></table><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git基础配置</title>
    <link href="/git/Git%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <url>/git/Git%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Git基础配置"><a href="#Git基础配置" class="headerlink" title="Git基础配置"></a>Git基础配置</h1><h2 id="生成并配置秘钥"><a href="#生成并配置秘钥" class="headerlink" title="生成并配置秘钥"></a>生成并配置秘钥</h2><h3 id="设置用户名-和-登录邮箱"><a href="#设置用户名-和-登录邮箱" class="headerlink" title="设置用户名 和 登录邮箱"></a>设置用户名 和 登录邮箱</h3><p>该步骤仅需执行一次，如果已经设置过，请跳过该步骤</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">git config --global user.name &#x27;用户名&#x27;<br><br>git config --global user.email &#x27;登录邮箱&#x27;<br></code></pre></div></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>生成密钥前，先打开当前用户目录下的.ssh目录，查看是否存在<code>id_rsa.pub</code>文件，如果文件已经存在，则说明密钥已经生成过</p><p>密钥只需生成一次，如果已经存在，请跳过该步骤</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">ssh-keygen -t rsa -C &#x27;登录邮箱&#x27;<br></code></pre></div></td></tr></table></figure><p>***上述代码执行完毕后，会连续多次要求输入密码。注意：此时不要输入密码，直接回车</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li><p>打开当前用户目录下的.ssh目录，打开目录下的<code>id_rsa.pub</code>文件，内容全部复制<br><img src="https://z3.ax1x.com/2021/04/22/cqhaQO.png"></p></li><li><p>然后进入GitHub或Gitee，进入 setting-&gt; SSH key-&gt; New SSH key，将复制的内容全部粘贴进去，然后给key起个名字即可<br>GitHub<br><img src="https://z3.ax1x.com/2021/04/22/cq4NAs.png"><br>Gitee<br><img src="https://z3.ax1x.com/2021/04/22/cqh7Yq.png"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo搭建教程</title>
    <link href="/blog/Hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/blog/Hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo搭建教程"><a href="#Hexo搭建教程" class="headerlink" title="Hexo搭建教程"></a>Hexo搭建教程</h1><p><a href="https://hexo.io/zh-cn/">Hexo官网</a></p><blockquote><p>该教程仅针对已经同步的repo库（使用github或gitee同步）</p></blockquote><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li><h3 id="安装-Node（建议使用Node-js-14-0以上版本）"><a href="#安装-Node（建议使用Node-js-14-0以上版本）" class="headerlink" title="安装 Node（建议使用Node.js 14.0以上版本）"></a>安装 Node（建议使用Node.js 14.0以上版本）</h3></li><li>下载地址1：<a href="https://nodejs.org/zh-cn/">Node.js官网</a></li><li>下载地址2：<a href="http://nodejs.cn/">Node.js中文网（国内推荐）</a></li><li>下载地址3：<a href="https://npm.taobao.org/mirrors/node">Node.js阿里源</a></li><li><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3>建议官网下载安装，<a href="https://git-scm.com/">Git官网</a><br>安装教程建议参考：<a href="https://www.runoob.com/git/git-install-setup.html">Git教程|菜鸟教程</a></li></ul><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><p>从 github 或 gitee 克隆项目到本地，然后打开</p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><h3 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h3><p>环境准备就绪后，即可使用npm安装Hexo</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></div></td></tr></table></figure><h3 id="进阶安装和使用"><a href="#进阶安装和使用" class="headerlink" title="进阶安装和使用"></a>进阶安装和使用</h3><p>对于熟悉 npm 的进阶用户，可以仅局部安装 hexo，该方法比较适合虚拟环境下使用</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install hexo<br></code></pre></div></td></tr></table></figure><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ol><li><code>npx hexo &lt;command&gt;</code></li><li>（不推荐，建议直接使用<a href="#%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85"><strong>全局安装</strong></a>）将 Hexo 所在目录下的<code>node_modules</code>添加到环境变量之中即可直接使用<code>hexo &lt;command&gt;</code>   <figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile<br></code></pre></div></td></tr></table></figure></li></ol><h2 id="使用-Hexo"><a href="#使用-Hexo" class="headerlink" title="使用 Hexo"></a>使用 Hexo</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>安装 Hexo 完成后，初始化环境（仅需执行一次），打开所在文件夹，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install<br></code></pre></div></td></tr></table></figure><p>然后即可使用 Hexo</p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo generate # 简写为 hexo g<br></code></pre></div></td></tr></table></figure><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo server #简写为 hexo s<br></code></pre></div></td></tr></table></figure><h2 id="将-Hexo-部署到-GitHub"><a href="#将-Hexo-部署到-GitHub" class="headerlink" title="将 Hexo 部署到 GitHub"></a>将 Hexo 部署到 GitHub</h2><h3 id="安装一键部署工具-hexo-deployer-git"><a href="#安装一键部署工具-hexo-deployer-git" class="headerlink" title="安装一键部署工具 hexo-deployer-git"></a>安装一键部署工具 hexo-deployer-git</h3><p>执行以下命令安装</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></div></td></tr></table></figure><h3 id="配置GitHub相关信息"><a href="#配置GitHub相关信息" class="headerlink" title="配置GitHub相关信息"></a>配置GitHub相关信息</h3><p>打开Hexo配置文件<code>_config.yml</code>，翻到文件底部，修改以下信息</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span> <span class="hljs-comment"># 填入git即可</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-comment"># 填入你要推送的github地址</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span> <span class="hljs-comment"># 推送的分支，默认为master</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-comment"># 自定义提交信息，&#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;</span><br></code></pre></div></td></tr></table></figure><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><p>以上信息全部配置完成后，执行以下命令一键部署到GitHub</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo deploy # 简写 hexo d<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>01_Vue介绍及说明</title>
    <link href="/%E5%89%8D%E7%AB%AF/vue/01-Vue%E4%BB%8B%E7%BB%8D%E5%8F%8A%E8%AF%B4%E6%98%8E/"/>
    <url>/%E5%89%8D%E7%AB%AF/vue/01-Vue%E4%BB%8B%E7%BB%8D%E5%8F%8A%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h1 id="Vue介绍及说明"><a href="#Vue介绍及说明" class="headerlink" title="Vue介绍及说明"></a>Vue介绍及说明</h1><h4 id="vue指令"><a href="#vue指令" class="headerlink" title="vue指令"></a>vue指令</h4><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">// 在vue的指令系统中，指令后一定是一个字符串，<br>// 里面只能填 在vue中已经定义过的data或者method<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 指令后面也不能使用模板语法 双大括号&#123;&#123;  &#125;&#125;，双大括号只能用在闭合标签内，而非标签属性中 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;isShow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">    el: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-comment">//data中是一个函数，该函数必须return一个对象，可以为空</span></span><br><span class="javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">        isShow: <span class="hljs-literal">true</span></span><br>      &#125;<br>    &#125;<br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05_Vue指令系统</title>
    <link href="/%E5%89%8D%E7%AB%AF/vue/05-Vue%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/"/>
    <url>/%E5%89%8D%E7%AB%AF/vue/05-Vue%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="05-Vue指令系统"><a href="#05-Vue指令系统" class="headerlink" title="05-Vue指令系统"></a>05-Vue指令系统</h1><ul><li><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3></li><li><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3></li><li><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3></li><li><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3></li></ul>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ES6语法</title>
    <link href="/%E5%89%8D%E7%AB%AF/js/ES6%E8%AF%AD%E6%B3%95/"/>
    <url>/%E5%89%8D%E7%AB%AF/js/ES6%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="ES6语法"><a href="#ES6语法" class="headerlink" title="ES6语法"></a>ES6语法</h1><p>概要</p><ul><li>模板字符串  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;张三&#x27;</span>;<br><span class="hljs-keyword">let</span> str = <span class="hljs-string">`我是<span class="hljs-subst">$&#123;name&#125;</span>`</span>;<br><span class="hljs-built_in">console</span>.log(str); <span class="hljs-comment">//输出结果：我是张三</span><br></code></pre></div></td></tr></table></figure></li><li>箭头函数  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;&#125; === <span class="hljs-function">()=&gt;</span>&#123;&#125; <span class="hljs-comment">//this指向发生了改变</span><br></code></pre></div></td></tr></table></figure></li></ul><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><ul><li><h4 id="var"><a href="#var" class="headerlink" title="var"></a>var</h4></li><li><h4 id="let"><a href="#let" class="headerlink" title="let"></a>let</h4></li><li><h4 id="const"><a href="#const" class="headerlink" title="const"></a>const</h4></li></ul><h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><h4 id="ES5-定义方法"><a href="#ES5-定义方法" class="headerlink" title="ES5 定义方法"></a>ES5 定义方法</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">//es5，定义</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">x</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> x;<br>&#125;<br><br><span class="hljs-comment">//es5，另一种定义方法（函数对象）</span><br><span class="hljs-keyword">var</span> add = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> x;<br>&#125;<br></code></pre></div></td></tr></table></figure><h4 id="ES6-定义方法"><a href="#ES6-定义方法" class="headerlink" title="ES6 定义方法"></a>ES6 定义方法</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">//es6，定义（箭头函数）</span><br><span class="hljs-keyword">var</span> add = <span class="hljs-function">(<span class="hljs-params">x</span>)=&gt;</span>&#123;<br>    <span class="hljs-keyword">return</span> x;<br>&#125;<br><br><span class="hljs-comment">//es6，简写定义方法</span><br><span class="hljs-keyword">var</span> add = <span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> x;<br></code></pre></div></td></tr></table></figure><p>以上四种定义方法，<strong>功能相等</strong></p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ul><li>写法一  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> person = &#123;<br>    name: <span class="hljs-string">&quot;张三&quot;</span>,<br>    age: <span class="hljs-number">20</span>,<br>    fav: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name); <span class="hljs-comment">//输出：张三</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>); <span class="hljs-comment">//输入:person，this指向当前对象(person)</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure></li><li>写法二  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> person2 = &#123;<br>    name: <span class="hljs-string">&quot;张三&quot;</span>,<br>    age: <span class="hljs-number">20</span>,<br>    fav: <span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name); <span class="hljs-comment">//输出：空字符串</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>); <span class="hljs-comment">//输入:window，this指向 定义当前对象(person2)的父级对象(上下文)</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure></li><li>写法三：单体模式(不是单例，单体只是叫法)  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> person3 = &#123;<br>    name: <span class="hljs-string">&quot;张三&quot;</span>,<br>    age: <span class="hljs-number">20</span>,<br>    <span class="hljs-function"><span class="hljs-title">fav</span>(<span class="hljs-params"></span>)</span>&#123; <span class="hljs-comment">//这种定义方式等同于 fav: function()&#123;&#125;</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name); <span class="hljs-comment">//输出：张三</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>); <span class="hljs-comment">//输入:person3，this指向当前对象(person3)</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure></li></ul><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h4 id="ES5-定义"><a href="#ES5-定义" class="headerlink" title="ES5 定义"></a>ES5 定义</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">//定义类</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params">name, age</span>)</span>&#123;<br>    <span class="hljs-built_in">this</span>.name = name;<br>    <span class="hljs-built_in">this</span>.age = age;<br>&#125;<br><br><span class="hljs-comment">//定义方法：基于原型给对象声明方法</span><br>Person.prototype.showPersonInfo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`我叫<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>，今年<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.age&#125;</span>岁了`</span>)<br>&#125;<br><br><span class="hljs-keyword">let</span> p1 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-number">20</span>);<br>p1.showPersonInfo(); <span class="hljs-comment">//输出：我叫张三，今年20岁了</span><br></code></pre></div></td></tr></table></figure><h4 id="ES6-定义"><a href="#ES6-定义" class="headerlink" title="ES6 定义"></a>ES6 定义</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">//定义类</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span></span>&#123;<br>    <span class="hljs-comment">//构造函数</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">name, age</span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br>    <span class="hljs-comment">//定义方法</span><br>    <span class="hljs-function"><span class="hljs-title">showPersonInfo</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`我叫<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>，今年<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.age&#125;</span>岁了`</span>)<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>前端</tag>
      
      <tag>ES6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/hello-world/"/>
    <url>/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
